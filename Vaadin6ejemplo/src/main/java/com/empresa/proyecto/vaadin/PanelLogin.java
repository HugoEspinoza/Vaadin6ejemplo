package com.empresa.proyecto.vaadin;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.context.ApplicationContext;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.empresa.proyecto.bean.Opcion;
import com.empresa.proyecto.bean.Usuario;
import com.empresa.proyecto.service.SeguridadService;
import com.empresa.proyecto.util.AlertaException;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutListener;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class PanelLogin extends CustomComponent implements ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel pnlLogin;
	@AutoGenerated
	private VerticalLayout layoutLogin;
	@AutoGenerated
	private VerticalLayout pnlMensajes;
	@AutoGenerated
	private Label lblMensaje;
	@AutoGenerated
	private HorizontalLayout pnlInvitado;
	@AutoGenerated
	private CheckBox chkInvitado;
	@AutoGenerated
	private Label lblInvitado;
	@AutoGenerated
	private HorizontalLayout pnlBotonera;
	@AutoGenerated
	private Button btnLogin;
	@AutoGenerated
	private GridLayout pnlDatos;
	@AutoGenerated
	private PasswordField txtClave;
	@AutoGenerated
	private Label lblClave;
	@AutoGenerated
	private TextField txtUsuario;
	@AutoGenerated
	private Label lblUsuario;
	@AutoGenerated
	private VerticalLayout pnlLogo;
	@AutoGenerated
	private Embedded imgLogin;
	private static final long serialVersionUID = -5952289656070910269L;

	private SeguridadService seguridadService;
	
	
	public PanelLogin() {
		buildMainLayout();
		postConstruccion();
	}

	void postConstruccion(){
		
		setCompositionRoot(mainLayout);
		chkInvitado.setImmediate(true);
		
		lblMensaje.setValue("");
		btnLogin.addListener((ClickListener) this);

		txtUsuario.addShortcutListener(new ShortcutListener("", KeyCode.ENTER, null) {

			private static final long serialVersionUID = 4590508522784602421L;

			@Override
			public void handleAction(Object sender, Object target) {
				buttonClickLogin();
			}

		});
		txtClave.addShortcutListener(new ShortcutListener("", KeyCode.ENTER, null) {

			private static final long serialVersionUID = -861170098509159006L;

			@Override
			public void handleAction(Object sender, Object target) {
				buttonClickLogin();
			}

		});
	}
	
	private void buttonClickLogin() {

		MainApplication mainApplication = (MainApplication)getApplication();
		
		if(chkInvitado.booleanValue()){
			
			List<Opcion> listaOpciones = new ArrayList<Opcion>();
			mainApplication.cargarPanelPrincipal(new Usuario("Invitado", "Invitado"), listaOpciones);
			
		}else{
			
			String username = txtUsuario.getValue().toString();
			String password = txtClave.getValue().toString();
			
			ApplicationContext context = getApplicationContext();
			seguridadService = (SeguridadService) context.getBean("seguridadService");
			
			try {
				Usuario usuarioValido = seguridadService.login(username, password);
				List<Opcion> listaOpciones = seguridadService.obtenerOpciones(usuarioValido);
				mainApplication.cargarPanelPrincipal(usuarioValido, listaOpciones);
				
			} catch (AlertaException alerta) {
				String msm = context.getMessage(alerta.getCodigoMensaje(), alerta.getArgs(), Locale.US);
				lblMensaje.setValue(msm);
				alerta.printStackTrace();
			}
		}
		
	}

	private static ApplicationContext getApplicationContext() {
		ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
		HttpServletRequest request = requestAttributes.getRequest();
		HttpSession session = request.getSession(false);
		return WebApplicationContextUtils.getRequiredWebApplicationContext(session.getServletContext());
	}
	
	@Override
	public void buttonClick(ClickEvent event) {

		if (event.getButton().equals(btnLogin)) {
			buttonClickLogin();
		}

	}

	public void setSeguridadService(SeguridadService seguridadService) {
		this.seguridadService = seguridadService;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("400px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("400px");
		
		// pnlLogin
		pnlLogin = buildPnlLogin();
		mainLayout.addComponent(pnlLogin);
		mainLayout.setComponentAlignment(pnlLogin, new Alignment(24));
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPnlLogin() {
		// common part: create layout
		pnlLogin = new Panel();
		pnlLogin.setImmediate(false);
		pnlLogin.setWidth("400px");
		pnlLogin.setHeight("300px");
		
		// layoutLogin
		layoutLogin = buildLayoutLogin();
		pnlLogin.setContent(layoutLogin);
		
		return pnlLogin;
	}

	@AutoGenerated
	private VerticalLayout buildLayoutLogin() {
		// common part: create layout
		layoutLogin = new VerticalLayout();
		layoutLogin.setImmediate(false);
		layoutLogin.setWidth("100.0%");
		layoutLogin.setHeight("100.0%");
		layoutLogin.setMargin(false);
		
		// pnlLogo
		pnlLogo = buildPnlLogo();
		layoutLogin.addComponent(pnlLogo);
		layoutLogin.setComponentAlignment(pnlLogo, new Alignment(24));
		
		// pnlDatos
		pnlDatos = buildPnlDatos();
		layoutLogin.addComponent(pnlDatos);
		layoutLogin.setComponentAlignment(pnlDatos, new Alignment(48));
		
		// pnlBotonera
		pnlBotonera = buildPnlBotonera();
		layoutLogin.addComponent(pnlBotonera);
		layoutLogin.setComponentAlignment(pnlBotonera, new Alignment(20));
		
		// pnlInvitado
		pnlInvitado = buildPnlInvitado();
		layoutLogin.addComponent(pnlInvitado);
		layoutLogin.setComponentAlignment(pnlInvitado, new Alignment(20));
		
		// pnlMensajes
		pnlMensajes = buildPnlMensajes();
		layoutLogin.addComponent(pnlMensajes);
		layoutLogin.setComponentAlignment(pnlMensajes, new Alignment(20));
		
		return layoutLogin;
	}

	@AutoGenerated
	private VerticalLayout buildPnlLogo() {
		// common part: create layout
		pnlLogo = new VerticalLayout();
		pnlLogo.setImmediate(false);
		pnlLogo.setWidth("350px");
		pnlLogo.setHeight("70px");
		pnlLogo.setMargin(false);
		
		// imgLogin
		imgLogin = new Embedded();
		imgLogin.setImmediate(false);
		imgLogin.setWidth("-1px");
		imgLogin.setHeight("-1px");
		imgLogin.setSource(new ThemeResource("img/Staff-Login.jpg"));
		imgLogin.setType(1);
		imgLogin.setMimeType("image/png");
		pnlLogo.addComponent(imgLogin);
		pnlLogo.setComponentAlignment(imgLogin, new Alignment(24));
		
		return pnlLogo;
	}

	@AutoGenerated
	private GridLayout buildPnlDatos() {
		// common part: create layout
		pnlDatos = new GridLayout();
		pnlDatos.setImmediate(false);
		pnlDatos.setWidth("350px");
		pnlDatos.setHeight("-1px");
		pnlDatos.setMargin(true);
		pnlDatos.setSpacing(true);
		pnlDatos.setColumns(2);
		pnlDatos.setRows(3);
		
		// lblUsuario
		lblUsuario = new Label();
		lblUsuario.setImmediate(false);
		lblUsuario.setWidth("-1px");
		lblUsuario.setHeight("-1px");
		lblUsuario.setValue("Usuario");
		pnlDatos.addComponent(lblUsuario, 0, 0);
		pnlDatos.setComponentAlignment(lblUsuario, new Alignment(34));
		
		// txtUsuario
		txtUsuario = new TextField();
		txtUsuario.setImmediate(false);
		txtUsuario.setWidth("-1px");
		txtUsuario.setHeight("-1px");
		pnlDatos.addComponent(txtUsuario, 1, 0);
		pnlDatos.setComponentAlignment(txtUsuario, new Alignment(33));
		
		// lblClave
		lblClave = new Label();
		lblClave.setImmediate(false);
		lblClave.setWidth("-1px");
		lblClave.setHeight("-1px");
		lblClave.setValue("Clave");
		pnlDatos.addComponent(lblClave, 0, 1);
		pnlDatos.setComponentAlignment(lblClave, new Alignment(34));
		
		// txtClave
		txtClave = new PasswordField();
		txtClave.setImmediate(false);
		txtClave.setWidth("-1px");
		txtClave.setHeight("-1px");
		pnlDatos.addComponent(txtClave, 1, 1);
		pnlDatos.setComponentAlignment(txtClave, new Alignment(33));
		
		return pnlDatos;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlBotonera() {
		// common part: create layout
		pnlBotonera = new HorizontalLayout();
		pnlBotonera.setImmediate(false);
		pnlBotonera.setWidth("350px");
		pnlBotonera.setHeight("-1px");
		pnlBotonera.setMargin(false);
		
		// btnLogin
		btnLogin = new Button();
		btnLogin.setCaption("Ingresar");
		btnLogin.setImmediate(true);
		btnLogin.setWidth("-1px");
		btnLogin.setHeight("-1px");
		pnlBotonera.addComponent(btnLogin);
		pnlBotonera.setComponentAlignment(btnLogin, new Alignment(6));
		
		return pnlBotonera;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlInvitado() {
		// common part: create layout
		pnlInvitado = new HorizontalLayout();
		pnlInvitado.setImmediate(false);
		pnlInvitado.setWidth("-1px");
		pnlInvitado.setHeight("-1px");
		pnlInvitado.setMargin(false);
		
		// lblInvitado
		lblInvitado = new Label();
		lblInvitado.setImmediate(false);
		lblInvitado.setWidth("-1px");
		lblInvitado.setHeight("-1px");
		lblInvitado.setValue("ingresar como invitado");
		pnlInvitado.addComponent(lblInvitado);
		pnlInvitado.setComponentAlignment(lblInvitado, new Alignment(20));
		
		// chkInvitado
		chkInvitado = new CheckBox();
		chkInvitado.setImmediate(false);
		chkInvitado.setWidth("-1px");
		chkInvitado.setHeight("-1px");
		pnlInvitado.addComponent(chkInvitado);
		pnlInvitado.setComponentAlignment(chkInvitado, new Alignment(20));
		
		return pnlInvitado;
	}

	@AutoGenerated
	private VerticalLayout buildPnlMensajes() {
		// common part: create layout
		pnlMensajes = new VerticalLayout();
		pnlMensajes.setImmediate(false);
		pnlMensajes.setWidth("-1px");
		pnlMensajes.setHeight("-1px");
		pnlMensajes.setMargin(false);
		
		// lblMensaje
		lblMensaje = new Label();
		lblMensaje.setImmediate(false);
		lblMensaje.setWidth("-1px");
		lblMensaje.setHeight("-1px");
		lblMensaje.setValue("Label");
		pnlMensajes.addComponent(lblMensaje);
		
		return pnlMensajes;
	}
	
	
}
